  - platform: time_date

  - platform: season

  - platform: darksky
    api_key: eaeb60c3ef41d7794773842090bdb882
    language: nl
    forecast:
      - 0
    hourly_forecast:
      - 0
      - 1
    monitored_conditions:
      - summary
      - icon
      - temperature

  - platform: zoneminder

  - platform: unifigateway
    host: !secret unifi_host
    username: !secret unifi_user
    password: !secret unifi_password
    monitored_conditions:
      - www
      - wan
      - wlan
      - lan
      - alerts
      - firmware

  - platform: p2000
    regios: 17
    disciplines: 1,2,3
  - platform: p2000
    name: Politie
    regios: 17
    disciplines: 3
  - platform: p2000
    name: Ambulance
    regios: 17
    disciplines: 2
  - platform: p2000
    name: Brandweer
    regios: 17
    disciplines: 1

  # - platform: dsmr
  #   port: /dev/ttyUSB1
  #   dsmr_version: 5

  - platform: dsmr_reader

  - platform: miflora
    mac: '80:EA:CA:89:22:88'

  - platform: rest
    resource: http://192.168.1.60/a?f=j
    value_template: '{{ value_json.ps0 }}'
    method: GET
    name: Youless Zonnepanelen
    scan_interval: 5
    unit_of_measurement: "W"

  - platform: rest
    resource: http://192.168.1.60/a?f=j
    value_template: '{{ value_json.cs0 }}'
    method: GET
    name: Youless Zonnepanelen Meterstand
    scan_interval: 5
    unit_of_measurement: "kWh"

  - platform: rest
    resource: http://192.168.1.61/a?f=j
    value_template: '{{ value_json.ps0 }}'
    method: GET
    name: Youless Wall Charger
    scan_interval: 5
    unit_of_measurement: "W"

  - platform: rest
    resource: http://192.168.1.61/a?f=j
    value_template: '{{ value_json.cs0 }}'
    method: GET
    name: Youless Wall Charger Meterstand
    scan_interval: 5
    unit_of_measurement: "kWh"

  - platform: systemmonitor
    resources:
      - type: disk_use_percent
        arg: /
      - type: disk_free
        arg: /
      - type: memory_use
      - type: memory_free
      - type: processor_use
      - type: last_boot
      - type: network_in
        arg: eno1
      - type: network_out
        arg: eno1
      - type: throughput_network_in
        arg: eno1
      - type: throughput_network_out
        arg: eno1

  - platform: afvalwijzer
    provider: mijnafvalwijzer
    zipcode: 3084LA
    housenumber: 471

  # - platform: solaredge
  #   api_key: RK9LHI2YXWF12HZOE21V1OPI290R5IR3
  #   site_id: 567805
  #   name: SolarEdge
  #   monitored_conditions:
  #     - current_power
  #     - energy_today
  #     - energy_this_month
  #     - energy_this_year
  #     - lifetime_energy

#Crypto related sensors
  - platform: bitcoin
    currency: EUR
    display_options:
      - exchangerate
#  - platform: etherscan
#    name: Ledger ETH Wallet
#    address: '0x3A3CD1458c7686B3a2b231b95e06Afe4dE67aBF8'
#  - platform: etherscan
#    name: Jaxx ETH Wallet
#    address: '0xba372441a528be1903e76ea9a2cf385cc30cdfb6'
#  - platform: sochain
#    name: Jaxx BTC Wallet
#    network: BTC
#    address: '19h2ufbBJVQr6DNSLm7RwB8Kk7Gy4pgM6t'
  # - platform: sochain
  #   name: Ledger BTC Wallet
  #   network: BTC
  #   address: 'bc1qtat4nhn082hs8028nzwuaske45tn8u4qn92ucn'

  # - platform: plex
  #   host: 192.168.1.5

  - platform: plex_recently_added
    token: ifDYViM4ZDEsKW2VCiH5
    host: !secret plex_host
    port: 32400
    ssl: true
    ssl_cert: false
    download_images: true
    max: 5
    section_types:
    - movie
    - show

  - platform: sonarr_upcoming_media
    api_key: !secret sonarr_api
    host: !secret container_host
    port: 8989
    days: 14
    ssl: false
    max: 5

  - platform: radarr_upcoming_media
    api_key: !secret radarr_api
    host: !secret container_host
    port: 7878
    days: 120
    ssl: false
    theaters: true
    max: 5

  - platform: moon
  - platform: yr
# Tracking entity to entity
  - platform: waze_travel_time
    name: "Reistijd naar huis"
    origin: device_tracker.martiens_iphone_11_pro
    destination: zone.home
    region: 'EU'
  - platform: waze_travel_time
    name: "Reistijd naar Fujitsu"
    origin: device_tracker.martiens_iphone_11_pro
    destination: zone.fujitsu_maarssen
    region: 'EU'
  - platform: waze_travel_time
    name: "Reistijd naar HbR"
    origin: device_tracker.martiens_iphone_11_pro
    destination: zone.havenbedrijf_rotterdam
    region: 'EU'
  - platform: pvoutput
    system_id: 55147
    api_key: !secret pv_output_apikey
    scan_interval: 120
  - platform: template
    sensors:
      power_consumption_pvoutput:
        value_template: '{% if is_state_attr("sensor.pvoutput", "power_consumption", "NaN") %}0{% else %}{{ states.sensor.pvoutput.attributes.power_consumption }}{% endif %}'
        friendly_name: 'Using'
        unit_of_measurement: 'W'
      energy_consumption:
        value_template: '{{ "%0.1f"|format(states.sensor.pvoutput.attributes.energy_consumption|float/1000) }}'
        friendly_name: 'Used'
        unit_of_measurement: 'kWh'
      power_generation:
        value_template: '{% if is_state_attr("sensor.pvoutput", "power_generation", "NaN") %}0{% else %}{{ states.sensor.pvoutput.attributes.power_generation }}{% endif %}'
        friendly_name: 'Generating'
        unit_of_measurement: 'W'
      energy_generation:
        value_template: '{% if is_state_attr("sensor.pvoutput", "energy_generation", "NaN") %}0{% else %}{{ "%0.2f"|format(states.sensor.pvoutput.attributes.energy_generation|float/1000) }}{% endif %}'
        friendly_name: 'Generated'
        unit_of_measurement: 'kWh'
      current_net_power_usage:
        friendly_name: 'Current Net. Power Usage'
        unit_of_measurement: 'W'
        value_template: >-
          {{ (1000 * (states("sensor.power_consumption") | float -
                      states("sensor.power_generation") | float)) | int }}
      time_to_leave_for_work:
        value_template: >
          {% set t = strptime(states.sensor.time.state,'%H:%M') %}
          {{ ( t.hour + t.minute / 60 ) > ( 8.33 - states.sensor.reistijd_naar_fujitsu.state | int / 60) }}
        friendly_name: 'Tijd om naar werk te vertrekken'
      
      current_lights_on:
        friendly_name: 'Lichten momenteel aan'
        unit_of_measurement: 'aan'
        value_template: >
          {% set lights = [
          states.light.keuken_1,
          states.light.keuken_2,
          states.light.keuken_3,
          states.light.keuken_4,
          states.light.keuken_5,
          states.light.keukenlampie,
          states.light.slaapkamer_spot_1,
          states.light.slaapkamer_spot_2,
          states.light.badkamer_1,
          states.light.badkamer_2,
          states.light.badkamer_3,
          states.light.badkamer_4,
          states.light.badkamer_5,
          states.light.overloop_1,
          states.light.overloop_2,
          states.light.rieten_lamp,
          states.light.glazenbol,
          states.light.hue_bloom,
          states.light.bol_lamp,
          states.light.woonkamer_spot,
          states.light.glazen_lamp,
          states.light.koperen_lamp,
          states.light.babykamer,
          ] %}
          {{ lights | selectattr('state','eq','on') | list | count }}

      current_devices_offline:
        friendly_name: 'Apparaten momenteel offline'
        unit_of_measurement: 'offline'
        value_template: >
          {% set devices = [
          states.binary_sensor.charlies_camera,
          states.binary_sensor.veranda_camera,
          states.binary_sensor.oprit_camera,
          states.binary_sensor.harmony_hub,
          states.binary_sensor.hdhomerun,
          states.binary_sensor.hue_hub,
          states.binary_sensor.netatmo_thermostaat,
          states.binary_sensor.router,
          states.binary_sensor.solaredge,
          states.binary_sensor.synology_nas,
          states.binary_sensor.transmission_server,
          states.binary_sensor.youless_zonnepanelen,
          states.binary_sensor.youless_wallcharger,
          ] %}
          {{ devices | selectattr('state','eq','off') | list | count }}

      current_appliances_on:
        friendly_name: 'Apparaten momenteel aan'
        unit_of_measurement: 'aan'
        value_template: >
          {% set appliances = [
          states.sensor.wasmachine_status,
          states.sensor.droger_status,
          states.sensor.gangkachel_status,
          ] %}
          {{ appliances | selectattr('state','!=','Uit') | list | count }}

      current_media_players_playing:
        friendly_name: 'Mediaspelers aan'
        unit_of_measurement: 'aan'
        value_template: >
          {% set mediaplayers = [
          states.media_player.woonkamer_plex,
          states.media_player.woonkamer_live_tv,
          states.media_player.slaapkamer_live_tv,
          states.media_player.tvkamer,
          states.media_player.woonkamer,
          states.media_player.keuken,
          states.media_player.badkamer,
          states.media_player.veranda,
          ] %}
          {{ mediaplayers | selectattr('state','eq','playing') | list | count }}

  - platform: command_line
    name: CPU Temperature
    command: "cat /sys/class/thermal/thermal_zone2/temp"
    unit_of_measurement: "Â°C"
    value_template: '{{ value | multiply(0.001) | round(1) }}'
  # - platform: synologydsm
  #   host: !secret synology_ip
  #   username: !secret synology_username
  #   password: !secret synology_password
  #   monitored_conditions:
  #     - cpu_total_load
  #     - memory_real_usage
  #     - network_up
  #     - network_down
  #     - volume_status
  #     - volume_percentage_used
  #     - volume_size_used

  - platform: template
    sensors:
      daily_power_total:
        value_template: >
          {{ (float(states.sensor.daily_power_peak.state) + float(states.sensor.daily_power_offpeak.state)) | round(3) }}
        unit_of_measurement: 'kWh'
  - platform: template
    sensors:
      daily_power_production_total:
        value_template: >
          {{ (float(states.sensor.daily_power_production_peak.state) + float(states.sensor.daily_power_production_offpeak.state)) | round(3) }}
        unit_of_measurement: 'kWh'
  - platform: template
    sensors:
      daily_power_netto:
        value_template: >
          {{ (float(states.sensor.daily_power_total.state) - float(states.sensor.daily_power_production_total.state)) | round(3) }}
        unit_of_measurement: 'kWh'

  - platform: template
    sensors:
      weekly_power_total:
        value_template: >
          {{ (float(states.sensor.weekly_power_peak.state) + float(states.sensor.weekly_power_offpeak.state)) | round(3) }}
        unit_of_measurement: 'kWh'
  - platform: template
    sensors:
      weekly_power_production_total:
        value_template: >
          {{ (float(states.sensor.weekly_power_production_peak.state) + float(states.sensor.weekly_power_production_offpeak.state)) | round(3) }}
        unit_of_measurement: 'kWh'
  - platform: template
    sensors:
      weekly_power_netto:
        value_template: >
          {{ (float(states.sensor.weekly_power_total.state) - float(states.sensor.weekly_power_production_total.state)) | round(3) }}
        unit_of_measurement: 'kWh'

  - platform: template
    sensors:
      youless_zonnepanelen_kw:
        value_template: >
          {{ (float(states.sensor.youless_zonnepanelen.state) / 1000) | round(3) }}
        unit_of_measurement: 'kW'

  - platform: template
    sensors:
      monthly_power_total:
        value_template: >
          {{ (float(states.sensor.monthly_power_peak.state) + float(states.sensor.monthly_power_offpeak.state)) | round(3) }}
        unit_of_measurement: 'kWh'
  - platform: template
    sensors:
      monthly_power_production_total:
        value_template: >
          {{ (float(states.sensor.monthly_power_production_peak.state) + float(states.sensor.monthly_power_production_offpeak.state)) | round(3) }}
        unit_of_measurement: 'kWh'
  - platform: template
    sensors:
      monthly_power_netto:
        value_template: >
          {{ (float(states.sensor.monthly_power_total.state) - float(states.sensor.monthly_power_production_total.state)) | round(3) }}
        unit_of_measurement: 'kWh'

  - platform: template
    sensors:
      yearly_power_total:
        value_template: >
          {{ (float(states.sensor.yearly_power_peak.state) + float(states.sensor.yearly_power_offpeak.state)) | round(3) }}
        unit_of_measurement: 'kWh'
  - platform: template
    sensors:
      yearly_power_production_total:
        value_template: >
          {{ (float(states.sensor.yearly_power_production_peak.state) + float(states.sensor.yearly_power_production_offpeak.state)) | round(3) }}
        unit_of_measurement: 'kWh'
  - platform: template
    sensors:
      yearly_power_netto:
        value_template: >
          {{ (float(states.sensor.yearly_power_total.state) - float(states.sensor.yearly_power_production_total.state)) | round(3) }}
        unit_of_measurement: 'kWh'

  - platform: template
    sensors:
      daily_gas_cost:
        value_template: "{{ states.sensor.daily_gas.state | multiply(0.75264) | round(2)}}"
        friendly_name: Gas Kosten (Vandaag)
        unit_of_measurement: â¬

  - platform: template
    sensors:
      daily_power_cost:
        value_template: "{{ states.sensor.daily_power_netto.state | multiply(0.25625) | round(2)}}"
        friendly_name: Electra Kosten (Vandaag)
        unit_of_measurement: â¬

  - platform: template
    sensors:
      wasmachine_status:
        value_template: '{{ states.input_select.wasmachine_status.state}}'
        friendly_name: 'Wasmachine Status'
      droger_status:
        value_template: '{{ states.input_select.droger_status.state}}'
        friendly_name: 'Droger Status'
      gangkachel_status:
        value_template: '{{ states.input_select.gangkachel_status.state}}'
        friendly_name: 'Gangkachel Status'

  - platform: template
    sensors:
      woonkamer_thermostaat_hvac_state:
        entity_id: climate.netatmo_woonkamer
        value_template: "{{ state_attr('climate.netatmo_woonkamer', 'hvac_action') }}"
        friendly_name: 'Woonkamer Thermostaat'
  - platform: template
    sensors:
      badkamer_radiator_hvac_state:
        entity_id: climate.netatmo_badkamer
        value_template: "{{ state_attr('climate.netatmo_badkamer', 'hvac_action') }}"
        friendly_name: 'Badkamer Radiator'
  - platform: template
    sensors:
      charlies_kamer_radiator_hvac_state:
        entity_id: climate.netatmo_charlie_s_kamer
        value_template: "{{ state_attr('climate.netatmo_charlie_s_kamer', 'hvac_action') }}"
        friendly_name: 'Charlies Radiator'
  - platform: template
    sensors:
      slaapkamer_radiator_hvac_state:
        entity_id: climate.netatmo_slaapkamer
        value_template: "{{ state_attr('climate.netatmo_slaapkamer', 'hvac_action') }}"
        friendly_name: 'Slaapkamer Radiator'

  - platform: mqtt
    name: "Badkamer Fan Verbruik Vandaag"
    state_topic: "tele/sonoff_badkamerfan/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Today"] }}'
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: "Badkamer Fan Verbruik Gister"
    state_topic: "tele/sonoff_badkamerfan/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Yesterday"] }}'
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: "Badkamer Fan Verbruik Totaal"
    state_topic: "tele/sonoff_badkamerfan/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Total"] }}'
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: "Badkamer Fan Huidig Verbruik"
    state_topic: "tele/sonoff_badkamerfan/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Power"] }}'
    unit_of_measurement: "W"
  - platform: mqtt
    name: "Badkamer Fan Voltage"
    state_topic: "tele/sonoff_badkamerfan/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Voltage"] }}'
    unit_of_measurement: "V"
  - platform: mqtt
    name: "Badkamer Fan Stroom"
    state_topic: "tele/sonoff_badkamerfan/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Current"] }}'
    unit_of_measurement: "A"

  - platform: mqtt
    name: "Gangkachel Verbruik Vandaag"
    state_topic: "tele/sonoff_gangkachel/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Today"] }}'
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: "Gangkachel Verbruik Gister"
    state_topic: "tele/sonoff_gangkachel/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Yesterday"] }}'
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: "Gangkachel Verbruik Totaal"
    state_topic: "tele/sonoff_gangkachel/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Total"] }}'
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: "Gangkachel Huidig Verbruik"
    state_topic: "tele/sonoff_gangkachel/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Power"] }}'
    unit_of_measurement: "W"
  - platform: mqtt
    name: "Gangkachel Voltage"
    state_topic: "tele/sonoff_gangkachel/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Voltage"] }}'
    unit_of_measurement: "V"
  - platform: mqtt
    name: "Gangkachel Stroom"
    state_topic: "tele/sonoff_gangkachel/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Current"] }}'
    unit_of_measurement: "A"

  - platform: mqtt
    name: "Wasmachine Verbruik Vandaag"
    state_topic: "tele/sonoff_wasmachine/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Today"] }}'
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: "Wasmachine Verbruik Gister"
    state_topic: "tele/sonoff_wasmachine/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Yesterday"] }}'
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: "Wasmachine Verbruik Totaal"
    state_topic: "tele/sonoff_wasmachine/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Total"] }}'
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: "Wasmachine Huidig Verbruik"
    state_topic: "tele/sonoff_wasmachine/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Power"] }}'
    unit_of_measurement: "W"
  - platform: mqtt
    name: "Wasmachine Voltage"
    state_topic: "tele/sonoff_wasmachine/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Voltage"] }}'
    unit_of_measurement: "V"
  - platform: mqtt
    name: "Wasmachine Stroom"
    state_topic: "tele/sonoff_wasmachine/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Current"] }}'
    unit_of_measurement: "A"

  - platform: mqtt
    name: "Droger Verbruik Vandaag"
    state_topic: "tele/sonoff_droger/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Today"] }}'
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: "Droger Verbruik Gister"
    state_topic: "tele/sonoff_droger/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Yesterday"] }}'
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: "Droger Verbruik Totaal"
    state_topic: "tele/sonoff_droger/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Total"] }}'
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: "Droger Huidig Verbruik"
    state_topic: "tele/sonoff_droger/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Power"] }}'
    unit_of_measurement: "W"
  - platform: mqtt
    name: "Droger Voltage"
    state_topic: "tele/sonoff_droger/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Voltage"] }}'
    unit_of_measurement: "V"
  - platform: mqtt
    name: "Droger Stroom"
    state_topic: "tele/sonoff_droger/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Current"] }}'
    unit_of_measurement: "A"

  - platform: mqtt
    name: "TV-Meubel Verbruik Vandaag"
    state_topic: "tele/tuya_tvmeubel/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Today"] }}'
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: "TV-Meubel Verbruik Gister"
    state_topic: "tele/tuya_tvmeubel/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Yesterday"] }}'
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: "TV-Meubel Verbruik Totaal"
    state_topic: "tele/tuya_tvmeubel/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Total"] }}'
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: "TV-Meubel Huidig Verbruik"
    state_topic: "tele/tuya_tvmeubel/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Power"] }}'
    unit_of_measurement: "W"
  - platform: mqtt
    name: "TV-Meubel Voltage"
    state_topic: "tele/tuya_tvmeubel/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Voltage"] }}'
    unit_of_measurement: "V"
  - platform: mqtt
    name: "TV-Meubel Stroom"
    state_topic: "tele/tuya_tvmeubel/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Current"] }}'
    unit_of_measurement: "A"

  - platform: mqtt
    name: "CV Verbruik Vandaag"
    state_topic: "tele/tuya_cv/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Today"] }}'
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: "CV Verbruik Gister"
    state_topic: "tele/tuya_cv/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Yesterday"] }}'
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: "CV Verbruik Totaal"
    state_topic: "tele/tuya_cv/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Total"] }}'
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: "CV Huidig Verbruik"
    state_topic: "tele/tuya_cv/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Power"] }}'
    unit_of_measurement: "W"
  - platform: mqtt
    name: "CV Voltage"
    state_topic: "tele/tuya_cv/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Voltage"] }}'
    unit_of_measurement: "V"
  - platform: mqtt
    name: "CV Stroom"
    state_topic: "tele/tuya_cv/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Current"] }}'
    unit_of_measurement: "A"

  - platform: template
    sensors:
      unifi_gateway_wan_cpu:
        friendly_name: "CPU"
        unit_of_measurement: "%"
        value_template: "{{ states.sensor.unifi_gateway_wan.attributes['gw_system-stats']['cpu'] }}"
      unifi_gateway_wan_mem:
        friendly_name: "Memory"
        unit_of_measurement: "%"
        value_template: "{{ states.sensor.unifi_gateway_wan.attributes['gw_system-stats']['mem'] }}"
      unifi_gateway_www_xput_down:
        friendly_name: "USG Speedtest Download"
        unit_of_measurement: Mbps
        icon_template: "mdi:progress-download"
        value_template: "{{ states.sensor.unifi_gateway_www.attributes.xput_down }}"
      unifi_gateway_www_xput_up:
        friendly_name: "USG Speedtest Upload"
        unit_of_measurement: Mbps
        icon_template: "mdi:progress-upload"
        value_template: "{{ states.sensor.unifi_gateway_www.attributes.xput_up }}"
      unifi_gateway_www_speedtest_ping:
        friendly_name: "USG Speedtest Ping"
        unit_of_measurement: ms
        icon_template: "mdi:progress-clock"
        value_template: "{{ states.sensor.unifi_gateway_www.attributes.speedtest_ping }}"
      unifi_gateway_wlan_num_user:
        friendly_name: 'Users'
        value_template: '{{ states.sensor.unifi_gateway_wlan.attributes.num_user }}'
      unifi_gateway_lan_num_user:
        friendly_name: 'Users Lan'
        value_template: '{{ states.sensor.unifi_gateway_lan.attributes.num_user }}'
      unifi_gateway_wan_download:
        friendly_name: 'WAN Download'
        unit_of_measurement: Kbps
        icon_template: "mdi:speedometer"
        value_template: "{{ (states.sensor.unifi_gateway_wan.attributes['rx_bytes-r'] / 1024) | int }}"

  - platform: template
    sensors:

# Info ############
      landroid_bat:
        friendly_name: Battery level
        value_template: >-
          {% if is_state_attr('sensor.landroid_landroid_gijs_de_grasmaaier_battery', 'charging', 1) -%}Charging
          {%- else -%}Discharging
          {%- endif %}
        icon_template: >-
          {% set level = states('sensor.landroid_landroid_gijs_de_grasmaaier_battery') | float -%}
          {%- if is_state_attr('sensor.landroid_landroid_gijs_de_grasmaaier_battery', 'charging', 1) -%}
            {%- if level > 99 -%}mdi:battery-charging-100
            {%- elif level > 89 -%}mdi:battery-charging-90
            {%- elif level > 79 -%}mdi:battery-charging-80
            {%- elif level > 69 -%}mdi:battery-charging-70
            {%- elif level > 59 -%}mdi:battery-charging-60
            {%- elif level > 49 -%}mdi:battery-charging-50
            {%- elif level > 39 -%}mdi:battery-charging-40
            {%- elif level > 29 -%}mdi:battery-charging-30
            {%- elif level > 19 -%}mdi:battery-charging-20
            {%- elif level > 9 -%}mdi:battery-charging-10
            {%- else -%}mdi:battery-charging-outline
            {%- endif -%}
          {%- else -%}
            {%- if level > 99 -%}mdi:battery
            {%- elif level > 89 -%}mdi:battery-90
            {%- elif level > 79 -%}mdi:battery-80
            {%- elif level > 69 -%}mdi:battery-70
            {%- elif level > 59 -%}mdi:battery-60
            {%- elif level > 49 -%}mdi:battery-50
            {%- elif level > 39 -%}mdi:battery-40
            {%- elif level > 29 -%}mdi:battery-30
            {%- elif level > 19 -%}mdi:battery-20
            {%- elif level > 9 -%}mdi:battery-10
            {%- else -%}mdi:battery-outline
            {%- endif -%}
          {%- endif %}
# Status ##########
      landroid_bladetime:
        friendly_name: Landroid Blade Time
        value_template: "{{ state_attr('sensor.landroid_landroid_gijs_de_grasmaaier_status', 'blade_time') }}"
        attribute_templates:
          time_formatted: >
            {% set t = state_attr('sensor.landroid_landroid_gijs_de_grasmaaier_status', 'blade_time') | int %}
            {% if t != 0 %}
              {{ '%0d d %0.02d h %0.02d min' | format(t // 1440, ((t % 1440) // 60), t % 60) }}
            {% endif %}
        icon_template: mdi:fan
        unit_of_measurement: "min"

      landroid_totaltime:
        friendly_name: Landroid Total Time
        value_template: "{{ state_attr('sensor.landroid_landroid_gijs_de_grasmaaier_status', 'work_time') }}"
        attribute_templates:
          time_formatted: >
            {% set t = state_attr('sensor.landroid_landroid_gijs_de_grasmaaier_status', 'work_time') | int %}
            {% if t != 0 %}
              {{ '%0d d %0.02d h %0.02d min' | format(t // 1440, ((t % 1440) // 60), t % 60) }}
            {% endif %}
        icon_template: mdi:bus-clock
        unit_of_measurement: "min"

      landroid_dist:
        friendly_name: Landroid Distance
        value_template: "{{ (state_attr('sensor.landroid_landroid_gijs_de_grasmaaier_status', 'distance') | float) / 1000 }}"
        icon_template: mdi:map-marker-distance
        unit_of_measurement: "km"

      landroid_lastupdate:
        friendly_name: Landroid last update
        value_template: "{{ as_timestamp(strptime( state_attr('sensor.landroid_landroid_gijs_de_grasmaaier_status', 'last_update'), '%H:%M:%S %d/%m/%Y')) | timestamp_custom('%d.%m.%Y %H:%M:%S') }}"
        icon_template: mdi:clock

# -55 or higher: 4 bars
# -56 to -66: 3 bars
# -67 to -77: 2 bars
# -78 to -88: 1 bar
# -89 or lower: 0 bars
      landroid_wifi:
        friendly_name: Landroid WIFI Quality
        value_template: "{{ state_attr('sensor.landroid_landroid_gijs_de_grasmaaier_status', 'rssi') }}"
        icon_template: >-
          {% set strength = state_attr('sensor.landroid_landroid_gijs_de_grasmaaier_status', 'rssi') | float -%}
          {%- if strength > -56 -%}mdi:wifi-strength-4
          {% elif strength > -67 -%}mdi:wifi-strength-3
          {% elif strength > -78 -%}mdi:wifi-strength-2
          {% elif strength > -89 -%}mdi:wifi-strength-1
          {%- else -%}mdi:wifi-strength-outline
          {%- endif %}
        unit_of_measurement: "dBm"

      landroid_yaw:
        friendly_name: Landroid Yaw
        value_template: "{{ state_attr('sensor.landroid_landroid_gijs_de_grasmaaier_status', 'yaw') }}"
        icon_template: mdi:axis-z-rotate-clockwise
        unit_of_measurement: "Â°"

      landroid_roll:
        friendly_name: Landroid Roll
        value_template: "{{ state_attr('sensor.landroid_landroid_gijs_de_grasmaaier_status', 'roll') }}"
        icon_template: mdi:axis-x-rotate-clockwise
        unit_of_measurement: "Â°"

      landroid_pitch:
        friendly_name: Landroid Pitch
        value_template: "{{ state_attr('sensor.landroid_landroid_gijs_de_grasmaaier_status', 'pitch') }}"
        icon_template: mdi:seat-flat-angled
        unit_of_measurement: "Â°"



###### Unraid Sensors

  - platform: command_line
    name: Unraid Version (Stable)
    command: /usr/bin/curl --insecure "https://s3.amazonaws.com/dnld.lime-technology.com/stable/unRAIDServer.plg" 2>&1 | grep Version |awk '{print $3}'


  - platform: template
    sensors:
      unraid_array_status:
        friendly_name: UnRAID Array Status
        value_template: >
          {{state_attr("binary_sensor.unraid_server", "arrayStatus")}}
      unraid_array_protection:
        friendly_name: UnRAID Array Protection
        value_template: >
          {{state_attr("binary_sensor.unraid_server", "arrayProtection")}}
      unraid_array_space:
        friendly_name: UnRAID Array Space
        value_template: >
          {% set state = state_attr("switch.unraid_array", "diskSpace") %} 
          {{ Offline if state == None else state | regex_findall_index(".*\((\d+.?\d+) %\)") | float }}
        unit_of_measurement: '%'

      unraid_array_status_numerical:
        friendly_name: UnRAID Array Status
        value_template: >
          {% if is_state("sensor.unraid_array_status", "Started") %}
            1
          {% else %}
            0
          {% endif %}
## UnRaid Array Protection Bar-Card  > 3.1.0 
      unraid_array_protection:
        friendly_name: UnRAID Array Protection
        value_template: >
          {{state_attr("binary_sensor.unraid_server", "arrayProtection")}}
      unraid_array_protection_numerical:
        friendly_name: UnRAID Array Protection
        value_template: >
          {% if is_state("sensor.unraid_array_protection", "Parity is valid.") %}
            1
          {% else %}
            0
          {% endif %}


  ## HDD SNMP Temperatures

  - platform: snmp
    name: 'UnRAID PARITY Temperature'  
    host: !secret container_host
    port: 161
    community: public
    version: 2c
    baseoid: .1.3.6.1.4.1.8072.1.3.2.4.1.2.8.100.105.115.107.116.101.109.112.1
    accept_errors: false
    value_template: >
      {{ value.split(':')[1].strip() }}
    unit_of_measurement: 'Â°C'

  - platform: snmp
    name: 'UnRAID DISK1 Temperature'
    host: !secret container_host
    port: 161
    community: public
    version: 2c
    baseoid: .1.3.6.1.4.1.8072.1.3.2.4.1.2.8.100.105.115.107.116.101.109.112.2
    accept_errors: false
    value_template: >
      {{ value.split(':')[1].strip() }}
    unit_of_measurement: 'Â°C'

  - platform: snmp
    name: 'UnRAID DISK2 Temperature'
    host: !secret container_host
    port: 161
    version: 2c
    community: public
    baseoid: .1.3.6.1.4.1.8072.1.3.2.4.1.2.8.100.105.115.107.116.101.109.112.3 
    accept_errors: false
    value_template: >
      {{ value.split(':')[1].strip() }}
    unit_of_measurement: 'Â°C'

  - platform: snmp
    name: 'UnRAID DISK3 Temperature'
    host: !secret container_host
    port: 161
    version: 2c
    community: public
    baseoid: .1.3.6.1.4.1.8072.1.3.2.4.1.2.8.100.105.115.107.116.101.109.112.4
    accept_errors: false
    value_template: >
      {{ value.split(':')[1].strip() }}
    unit_of_measurement: 'Â°C'

  - platform: snmp
    name: 'UnRAID DISK4 Temperature'
    host: !secret container_host
    port: 161
    version: 2c
    community: public
    baseoid: .1.3.6.1.4.1.8072.1.3.2.4.1.2.8.100.105.115.107.116.101.109.112.5
    accept_errors: false
    value_template: >
      {{ value.split(':')[1].strip() }}
    unit_of_measurement: 'Â°C'

  - platform: snmp
    name: 'UnRAID DISK5 Temperature'
    host: !secret container_host
    port: 161
    version: 2c
    community: public
    baseoid: .1.3.6.1.4.1.8072.1.3.2.4.1.2.8.100.105.115.107.116.101.109.112.6
    accept_errors: false
    value_template: >
      {{ value.split(':')[1].strip() }}
    unit_of_measurement: 'Â°C'

  - platform: snmp
    name: 'UnRAID DISK6 Temperature'
    host: !secret container_host
    port: 161
    version: 2c
    community: public
    baseoid: .1.3.6.1.4.1.8072.1.3.2.4.1.2.8.100.105.115.107.116.101.109.112.7
    accept_errors: false
    value_template: >
      {{ value.split(':')[1].strip() }}
    unit_of_measurement: 'Â°C'

  ## SNMP LAN Upload

  - platform: snmp
    name: 'UnRAID Upload'
    host: !secret container_host
    port: 161
    community: public
    baseoid: .1.3.6.1.2.1.2.2.1.16.9
    accept_errors: false
    unit_of_measurement: "Kbps"
    value_template: >
      {{((value | float ) / 1000000 ) | round(2) }}
  # - platform: snmp
  #   name: 'UnRAID LAN1 Upload LAGG0'
  #   host: !secret container_host
  #   port: 161
  #   community: public
  #   baseoid: .1.3.6.1.2.1.2.2.1.16.8
  #   accept_errors: false
  #   unit_of_measurement: "Kbps"
  #   value_template: >
  #     {{((value | float ) / 1000000 ) | round(2) }}
  # - platform: snmp
  #   name: 'UnRAID LAN2 Upload LAGG0'
  #   host: !secret container_host
  #   port: 161
  #   community: public
  #   baseoid: .1.3.6.1.2.1.2.2.1.16.14
  #   accept_errors: false
  #   unit_of_measurement: "Kbps"
  #   value_template: >
  #     {{((value | float ) / 1000000 ) | round(2) }}
  # - platform: snmp
  #   name: 'UnRAID LAN3 Upload LAGG0'
  #   host: !secret container_host
  #   port: 161
  #   community: public
  #   baseoid: .1.3.6.1.2.1.2.2.1.16.15
  #   accept_errors: false
  #   unit_of_measurement: "Kbps"
  #   value_template: >
  #     {{((value | float ) / 1000000 ) | round(2) }}
  # - platform: snmp
  #   name: 'UnRAID LAN4 Upload LAGG0'
  #   host: !secret container_host
  #   port: 161
  #   community: public
  #   baseoid: .1.3.6.1.2.1.2.2.1.16.16
  #   accept_errors: false
  #   unit_of_measurement: "Kbps"
  #   value_template: >
  #     {{((value | float ) / 1000000 ) | round(2) }}
  ## SNMP LAN Download

  - platform: snmp
    name: 'UnRAID Download'
    host: !secret container_host
    port: 161
    community: public
    baseoid: .1.3.6.1.2.1.2.2.1.10.9
    accept_errors: false
    unit_of_measurement: "Kbps"
    value_template: >
      {{((value | float ) / 1000000 ) | round(2) }}
  # - platform: snmp
  #   name: 'UnRAID LAN1 Download LAGG0'
  #   host: !secret container_host
  #   port: 161
  #   community: public
  #   baseoid: .1.3.6.1.2.1.2.2.1.10.13
  #   accept_errors: false
  #   unit_of_measurement: "Kbps"
  #   value_template: >
  #     {{((value | float ) / 1000000 ) | round(2) }}
  # - platform: snmp
  #   name: 'UnRAID LAN2 Download LAGG0'
  #   host: !secret container_host
  #   port: 161
  #   community: public
  #   baseoid: .1.3.6.1.2.1.2.2.1.10.14
  #   accept_errors: false
  #   unit_of_measurement: "Kbps"
  #   value_template: >
  #     {{((value | float ) / 1000000 ) | round(2) }}
  # - platform: snmp
  #   name: 'UnRAID LAN3 Download LAGG0'
  #   host: !secret container_host
  #   port: 161
  #   community: public
  #   baseoid: .1.3.6.1.2.1.2.2.1.10.15
  #   accept_errors: false
  #   unit_of_measurement: "Kbps"
  #   value_template: >
  #     {{((value | float ) / 1000000 ) | round(2) }}
  # - platform: snmp
  #   name: 'UnRAID LAN4 Download LAGG0'
  #   host: !secret container_host
  #   port: 161
  #   community: public
  #   baseoid: .1.3.6.1.2.1.2.2.1.10.16
  #   accept_errors: false
  #   unit_of_measurement: "Kbps"
  #   value_template: >
  #     {{((value | float ) / 1000000 ) | round(2) }}
